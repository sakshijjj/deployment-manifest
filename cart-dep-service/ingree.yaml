apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: file-ingress-3
  annotations:
    # Load Balancer Name
    alb.ingress.kubernetes.io/load-balancer-name: cpr-ingress
    alb.ingress.kubernetes.io/scheme: internet-facing
    # Health Check Settings
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    #Important Note:  Need to add health check path annotations in service level if we are planning to use multiple targets in a load balancer    
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'  
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443' 
spec:
  ingressClassName: my-aws-ingress-class   # Ingress Class                       
  rules:
    - http:
        paths:           
          - path: /cart
            pathType: Prefix
            backend:
              service:
                name: cart-service
                port: 
                  number: 8080
                       
             

# [k8s_nodes]
# k8s-worker1 ansible_host=192.168.75.118 ansible_user=ec2-user ansible_ssh_private_key_file=/home/ubuntu/.ssh/Tokyo.pem ansible_ssh_common_args='-o ProxyJump=bastion'
# k8s-worker2 ansible_host=192.168.115.186 ansible_user=ec2-user ansible_ssh_private_key_file=/home/ubuntu/.ssh/Tokyo.pem ansible_ssh_common_args='-o ProxyJump=bastion'




# [jenkins_slaves]
# slave1-dev ansible_host=172.31.32.26 ansible_user=ubuntu ansible_ssh_private_key_file=/home/ubuntu/.ssh/Tokyo.pem
# slave2-stage ansible_host=172.31.46.2 ansible_user=ubuntu ansible_ssh_private_key_file=/home/ubuntu/.ssh/Tokyo.pem
# slave3-prod ansible_host=172.31.42.219 ansible_user=ubuntu ansible_ssh_private_key_file=/home/ubuntu/.ssh/Tokyo.pem
